apiVersion: v1
kind: Secret
metadata:
  name: gateway-secret
type: Opaque
stringData:
  NODE_ENV: "production"
  PORT: "8000"
  USER_API_URL: "http://user-service-service:3001"
  POST_API_URL: "http://post-service-service:3002"
  FEED_API_URL: "http://feed-service-service:3003"
  LOG_LEVEL: "info"
  SERVICE_NAME: "api-gateway"
  GATEWAY_CACHE_DURATION_MS: "300000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: gateway-service
        image: dgeorgiev0348/gateway-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        envFrom:
        - secretRef:
            name: gateway-secret
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}' # Keep this if it was there
    cloud.google.com/backend-config: '{"ports": {"8000":"gateway-hc-config"}}' # Associate port 8000 with the BackendConfig
spec:
  selector:
    app: api-gateway
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: NodePort # Or ClusterIP if only accessed via Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  tls:
  - hosts:
    - jpeg.gateway
    secretName: gateway-tls-secret
  rules:
  - host: jpeg.gateway
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70